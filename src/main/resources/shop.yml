# In the shop config, you can customize the shop itself, and
# decide prices, maximum upgradeable values, and configure perks.

# Represents something a player can pay to upgrade that affects them in game.
# Each option is a path the player moves through; they can't buy the next one
# until they've bought all previous upgrades in that list.
#
# A player's progress through that path is tracked by the position in the list:
# if someone buys the 3rd upgrade and then you change it, they'll get the new value
# in the 3rd pair, even if you change the price.
upgradeable-options:
  # An option is an ordered list of pairs of value to price. The first option is always free.
  cooldown: # The number of ticks between gun shots.
    - 20:$0   # 20 ticks = 1 second
    - 18:$500 # This represents 0.9 seconds, and it costs $500 to upgrade to it
    - 16:$1000 # 0.8 seconds, costing $1000 to upgrade
    - 14:$2500
    - 12:$5000
    - 10:$10000 # 0.5 seconds.
  leap-cooldown: # How many ticks between leaps
    - 50:$0 # 50 ticks = 2.5 seconds
    - 45:$250 # 2.25 seconds for $250
    - 40:$500
    - 35:$500 # Prices don't have to increase: they need to buy previous ones first anyway.
    - 30:$500
    - 25:$1000
    - 20:$1000
  leap-speed: # How fast a leap throws the player
    - 1.5:0
    # If you don't specify values here, this option will be considered disabled and won't
    # appear in the shop, acting as a fixed value.
  speed: # The speed modifier in percent increase. 100 = 2x speed
    - 0:$0
    - 25:$500
    - 50:$750
    - 100:$1000
    - 150:$2500
    - 200:$5000
  piercing: # How many players each shot can kill before stopping
    - 1:$0
    - 2:$200
    - 3:$600
    - 5:$1500

cosmetics:

  # This determines what item a player gets given as their gun.
  # Traditionally quake uses hoes for guns, but any items work!
  gun-skins:
    # The default skin players get when they join.
    default-skin: wooden_hoe
    # When true, the shop will require all previous skins to be
    # purchased before the next.
    # Disable this if you want to just use random items players
    # can pick individually, without a specific order.
    require-previous: true
    shop:
      # Wooden hoe is default, so no need to list it here too
      '1':
        item: stone_hoe
        price: 100
      '2':
        item: iron_hoe
        price: 250
      '3':
        item: golden_hoe
        price: 500
      '4':
        item: diamond_hoe
        price: 1000
      '5':
        item: netherite_hoe
        price: 2500

  # Trails are the lines that appear when a player shoots. Everyone gets and uses
  # the trail called "default" by default, but can buy others in the shop!
  # If default is the only trail in this section, the Trail shop won't appear.
  trails:
    default:
      type: STANDARD # Standard is a simple line.
      item: STICK # The item to show in the shop
      display: '&c&lDefault'
      price: 0
      description: # The description appears in lore of the item in the shop
        - 'A simple red line.'
        - 'The default trail.'
      particle: REDSTONE
      # For redstone, you can choose the size of the particle. 1 = default
      size: 0.85
      # Use a hex colour for colourable particles. Default is ff0000 = red.
      # You may also use dye colours.
      colour: ff0000
      # How many particles are spawned every block along the trail
      amount-per-block: 5
    example-spiral:
      type: SPIRAL
      item: STRING
      display: '&b&lSpiral'
      price: 5000 # How much should this trail cost in the shop?
      description: # The description appears in lore of the item in the shop
        - 'A light blue spiral!'
      particle: REDSTONE
      size: 0.6
      colour: light_blue # Dye colours work too!
      amount-per-block: 10
      rotations-per-block: 0.5 # How many twists per block the trail has
      radius: 0.2 # The radius of the spiral
      amount: 1 # How many spirals appear (i.e. 2 is a helix)

  armour:
    to: do

  kill-messages:
    default:
      message: '%attacker% killed %victim%'
      headshot: '%attacker% killed %victim%! &hHeadshot!'
      item: OAK_SIGN
      display: '&c&lDefault'
      price: 0
      # Description is automatically populated with the message and headshot message

    # You can configure more message/headshots here, but when a cosmetics section is
    # empty, it's simply omitted from the shop menus.

  kill-effects:
    to: do

  shoot-sounds:
    default:
      sound:
      volume: 1
      pitch: 1

  kill-soundsd:
    default:
      sound: 'entity.arrow.hit_player'

